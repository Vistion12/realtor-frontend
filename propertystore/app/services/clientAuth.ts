import { authHeaders } from '../utils/auth';

const BASE_URL = "http://localhost:5100/api";

export interface ClientAuthResponse {
  token: string;
  clientName: string;
  expires: string;
}

export const clientAuthService = {
  async login(login: string, password: string): Promise<ClientAuthResponse> {
    const response = await fetch(`${BASE_URL}/client/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ Login: login, Password: password }),
    });

    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }

    return response.json();
  },

  async changePassword(newPassword: string): Promise<{ success: boolean; message: string }> {
    const response = await fetch(`${BASE_URL}/client/auth/change-password`, {
      method: 'POST',
      headers: authHeaders(),
      body: JSON.stringify({ newPassword }),
    });

    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è');
    }

    return response.json();
  },

  async giveConsent(ipAddress: string, userAgent: string): Promise<{ success: boolean; message: string }> {
    console.log('üü° Sending consent request with:', { ipAddress, userAgent }); // –û–¢–õ–ê–î–ö–ê
    
    const response = await fetch(`${BASE_URL}/client/auth/consent`, {
      method: 'POST',
      headers: authHeaders(),
      body: JSON.stringify({ 
        acceptPersonalData: true,
        acceptDocumentStorage: true,
        ipAddress: ipAddress,
        userAgent: userAgent
      }),
    });

    console.log('üü° Consent response status:', response.status); // –û–¢–õ–ê–î–ö–ê

    if (!response.ok) {
      const errorText = await response.text();
      console.error('üî¥ Consent API error:', errorText); // –û–¢–õ–ê–î–ö–ê
      throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è');
    }

    const result = await response.json();
    console.log('üü¢ Consent API success:', result); // –û–¢–õ–ê–î–ö–ê
    return result;
  },
};